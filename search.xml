<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021CCPC广州 C.necklace</title>
      <link href="/2022/09/05/index-1/"/>
      <url>/2022/09/05/index-1/</url>
      
        <content type="html"><![CDATA[<h1 id="C-necklace"><a href="#C-necklace" class="headerlink" title="C.necklace"></a>C.necklace</h1><p>题目链接：<a href="https://codeforces.com/gym/103415/problem/C">Problem - C - Codeforces</a></p><h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p>一串项链有1~n个节点，n和1相连（形成环），其中m个节点是Bob喜欢的，现在给出这m个节点的位置，要求把项链分割成m段，使每段都至少有一个Bob喜欢的节点。求最大段长度最小是多少？</p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>最大值最小我们可以通过二分来求，但如何通过check函数来二分是本题的难点，一般在check函数里都有用到贪心思想，因为只要最优情况满足条件那么当前的mid即为合法答案</p><p>可以想到mid是最大区间长度，而对于一个区间的长度len，在满足小于等于mid和右端点小于下一个Bob喜欢的节点的前提下，右端点要尽可能逼近  下一个特殊节点</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/05/b29718811da38afc.png"></p><p>所以确定了第一个区间的左端点，那么整个区间的划分情况都可以确定了，但是由于是环形，这样使得枚举左端点的时间复杂度很高，而且数据范围很大所以我们应该贪心的优化问题</p><h3 id="贪心优化"><a href="#贪心优化" class="headerlink" title="贪心优化"></a>贪心优化</h3><p>如果我们确定了左端点l，然后得到第一次贪心下的右端点，那么 r-l+1  是在不超过下一个特殊节点下取到的len,</p><p>而且这个len一定小于等于mid，但是这样是不是没有把利益最大化？因为我们明明可以取到mid，只要不超过mid就行，但是在限制下，len取小了，但是换一种思路，我们是不是可以把l前移，在不超过前一个特殊点的情况下前移（同时len也不超过mid），那么这样是不是利益最大化了，因为对于前一段来说，如果仅仅在第一个贪心的思想下，mid满足不了，那么就return false了，但实际上后一段可以为它多“吃”一段，那么可能就会满足条件了</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/05/9fbbb2a2299cd798.png" alt="https://s3.bmp.ovh/imgs/2022/09/05/9fbbb2a2299cd798.png"></p><p>思路总结</p>]]></content>
      
      
      <categories>
          
          <category> CCPC广州 </category>
          
          <category> 网络选拔赛训练赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
